{"version":3,"sources":["hooks.js","ColorProvider.js","App.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","onChange","e","target","ColorContext","createContext","useColors","useContext","ColorProvider","children","colorData","colors","setColors","Provider","addColor","title","color","some","c","alert","id","v4","rating","removeColor","filter","rateColor","map","Star","selected","onSelect","onClick","StarRating","length","totalStars","selectedStars","onStarRate","Array","star","index","Color","className","style","height","backgroundColor","ColorList","display","justifyContent","flexWrap","AddColorForm","titleProps","resetTxtTitle","colorProps","resetTxtColor","textAlign","flexDirection","marginBottom","onSubmit","preventDefault","console","log","type","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a990f47.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const reset = () => {\r\n        setValue(initialValue);\r\n    };\r\n\r\n    return [{\r\n        value,\r\n        onChange: handleChange\r\n    },\r\n        reset\r\n    ]\r\n};\r\n","import { createContext, useState, useContext } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport colorData from \"./color-data.json\";\r\n\r\nexport const ColorContext = createContext();\r\n\r\n/*custom hook*/\r\nexport const useColors = () => useContext(ColorContext);\r\n\r\nexport default function ColorProvider({ children }) {\r\n  const [colors, setColors] = useState(colorData);\r\n  const addColor = (title, color) => {\r\n      if(colors.some(c => c.color === color)) alert(\"Color already exists\");\r\n      else{\r\n        setColors([\r\n        ...colors,\r\n        {\r\n            id: v4(),\r\n            rating: 0,\r\n            title,\r\n            color,\r\n        },\r\n        ]);\r\n    }\r\n}\r\n\r\n  const rateColor = (id, rating) =>\r\n    setColors(\r\n      colors.map((color) => (color.id === id ? { ...color, rating } : color))\r\n    );\r\n\r\n  const removeColor = (id) =>\r\n    setColors(colors.filter((color) => color.id !== id));\r\n\r\n    \r\n    return(\r\n        <ColorContext.Provider value={{colors, addColor, removeColor, rateColor}}>{children}</ColorContext.Provider>\r\n    )\r\n}\r\n","import './App.css';\r\nimport { FaStar, FaTrash } from \"react-icons/fa\";\r\nimport { useInput } from \"./hooks\";\r\nimport { useColors } from './ColorProvider';\r\n\r\nconst createArray = length => [...Array(length)];\r\n\r\nfunction Star({ selected = false, onSelect }) {\r\n  return <FaStar color={selected ? \"red\" : \"gray\"} onClick={onSelect} />;\r\n}\r\n\r\nfunction StarRating({ totalStars = 5, selectedStars, onStarRate }) {\r\n\r\n  return <>\r\n    {createArray(totalStars).map((star, index) =>\r\n      <Star key={index} selected={selectedStars > index} onSelect={() => onStarRate(index + 1)} />\r\n    )}\r\n    <p>{selectedStars} of {totalStars}</p>\r\n  </>\r\n}\r\n\r\nfunction Color({ id, title, color, rating}) {\r\n  const {rateColor, removeColor} = useColors();\r\n\r\n  return (<div className=\"box\">\r\n    <h1>{title}</h1>\r\n    <div style={{ height: 50, backgroundColor: color }}></div>\r\n    <h3>{color}</h3>\r\n    <StarRating selectedStars={rating} onStarRate={(rating) => rateColor(id, rating)} />\r\n    <button>\r\n      <FaTrash onClick={() => removeColor(id)} />\r\n    </button>\r\n  </div>)\r\n}\r\n\r\nexport function ColorList() {\r\n  const {colors} = useColors();\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\r\n      {colors.map((color) => <Color {...color} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AddColorForm() {\r\n  const [titleProps, resetTxtTitle] = useInput(\"\");\r\n  const [colorProps, resetTxtColor] = useInput(\"#000000\");\r\n\r\n  const {addColor} = useColors();\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    console.log(titleProps);\r\n    addColor(titleProps.value, colorProps.value);\r\n    resetTxtTitle();\r\n    resetTxtColor();\r\n  }\r\n  return (\r\n    <div style={{ display: 'flex', textAlign: 'center', flexDirection: 'column', marginBottom: '2rem' }}>\r\n      <h2>Add Color</h2>\r\n      <form onSubmit={submit} style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <input type=\"text\" placeholder=\"Color Name\" {...titleProps} />\r\n        <input type=\"color\" placeholder=\"Color\" {...colorProps} />\r\n        <button type=\"submit\">Add Color</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: \"center\" }}>Color Organizer</h1>\r\n      <AddColorForm />\r\n      <ColorList /> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ColorProvider from './ColorProvider';\r\n\r\n\r\nReactDOM.render(\r\n  <ColorProvider>\r\n    <App />\r\n  </ColorProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}